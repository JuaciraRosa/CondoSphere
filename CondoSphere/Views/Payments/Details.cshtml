@model CondoSphere.Models.Payment
@using CondoSphere.Models

@{
    ViewData["Title"] = "Payment Details";

    var statusBadge = Model.Status switch
    {
        PaymentStatusType.Pending => "bg-warning",
        PaymentStatusType.Succeeded => "bg-success",
        PaymentStatusType.Failed => "bg-danger",
        PaymentStatusType.Canceled => "bg-dark",
        _ => "bg-secondary"
    };
}

<section class="section">
    <div class="container">
        <div class="card shadow-sm p-4">
            <h4 class="mb-4"><i class="bi bi-info-circle"></i> Payment Details</h4>

            <div class="row gy-3">
                <div class="col-md-3">
                    <div class="fw-semibold text-muted">Status</div>
                    <div><span class="badge @statusBadge">@Model.Status</span></div>
                </div>

                <div class="col-md-3">
                    <div class="fw-semibold text-muted">Amount</div>
                    <div>@Model.Amount.ToString("N2")</div>
                </div>

                <div class="col-md-3">
                    <div class="fw-semibold text-muted">Method</div>
                    <div>@Model.Method</div>
                </div>

                <div class="col-md-3">
                    <div class="fw-semibold text-muted">Quota</div>
                    <div>
                        @(Model.Quota != null
                            ? $"#{Model.Quota.Id} — {Model.Quota.DueDate:yyyy-MM}"
                            : $"#{Model.QuotaId}")
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="fw-semibold text-muted">Provider</div>
                    <div>@(string.IsNullOrWhiteSpace(Model.Provider) ? "-" : Model.Provider)</div>
                </div>

                <div class="col-md-3">
                    <div class="fw-semibold text-muted">Created</div>
                    <div>@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")</div>
                </div>

                <div class="col-md-3">
                    <div class="fw-semibold text-muted">Paid</div>
                    <div>@(Model.PaidAt?.ToString("yyyy-MM-dd HH:mm") ?? "-")</div>
                </div>

                <div class="col-md-6">
                    <div class="fw-semibold text-muted">Provider Payment Id</div>
                    <div class="font-monospace">@(!string.IsNullOrEmpty(Model.ProviderPaymentId) ? Model.ProviderPaymentId : "-")</div>
                </div>

                <div class="col-md-6">
                    <div class="fw-semibold text-muted">Provider Reference</div>
                    <div class="font-monospace">@(!string.IsNullOrEmpty(Model.ProviderReference) ? Model.ProviderReference : "-")</div>
                </div>

                @if (!string.IsNullOrEmpty(Model.ReceiptUrl))
                {
                    <div class="col-12">
                        <div class="fw-semibold text-muted">Receipt</div>
                        <div>
                            <a href="@Model.ReceiptUrl" target="_blank" class="btn btn-sm btn-outline-success">
                                <i class="bi bi-receipt"></i> Open receipt
                            </a>
                        </div>
                    </div>
                }
            </div>

            <div class="mt-4 d-flex gap-2">
                <a class="btn btn-outline-secondary" asp-action="Index"><i class="bi bi-arrow-left"></i> Back</a>
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id"><i class="bi bi-pencil"></i> Edit</a>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
 }
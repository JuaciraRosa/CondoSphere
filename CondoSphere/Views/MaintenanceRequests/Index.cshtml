@model IEnumerable<CondoSphere.Models.MaintenanceRequest>

@{
    ViewData["Title"] = "Maintenance Requests";
}

@section PageHeader {
    <section class="page-title">
        <div class="container">
            <h1>Maintenance Requests</h1>
            <div class="breadcrumbs">
                <ol>
                    <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                    <li>Maintenance</li>
                </ol>
            </div>
        </div>
    </section>
}

<section class="section">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="m-0">Requests</h2>
            <a class="btn btn-success" asp-action="Create"><i class="bi bi-plus-lg"></i> New</a>
        </div>

        <div class="card shadow-sm">
            <div class="table-responsive">
                <table class="table align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Submitted At</th>
                            <th>Status</th>
                            <th>Condominium</th>
                            <th>Submitted By</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in (Model ?? Enumerable.Empty<CondoSphere.Models.MaintenanceRequest>()))
                        {
                            var badge = item.Status switch
                            {
                                CondoSphere.Models.RequestStatus.Open => "bg-warning",
                                CondoSphere.Models.RequestStatus.InProgress => "bg-info",
                                CondoSphere.Models.RequestStatus.Completed => "bg-success", // use "Closed" se esse for o nome no seu enum
                                _ => "bg-secondary"
                            };

                            <tr>
                                <td class="fw-semibold">@item.Title</td>
                                <td class="text-muted">@item.Description</td>
                                <td>@item.SubmittedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                <td><span class="badge @badge">@item.Status</span></td>
                                <td>@item.Condominium?.Name ?? "-"</td>
                                <td>@(item.SubmittedBy?.FullName ?? item.SubmittedBy?.Email ?? "-")</td>
                                <td class="text-end">
                                    <a class="btn btn-sm btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil"></i></a>
                                    <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"></i></a>
                                    <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i></a>
                                </td>
                            </tr>
                        }

                        @if (Model == null || !Model.Any())
                        {
                            <tr><td colspan="7" class="text-center text-muted py-4">No records found.</td></tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}